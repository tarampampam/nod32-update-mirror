#!/bin/bash

## @author    Samoylov Nikolay
## @project   NOD32 Update Script Settings
## @copyright 2015 <github.com/tarampampam>
## @license   MIT <http://opensource.org/licenses/MIT>
## @github    https://github.com/tarampampam/nod32-update-mirror/
## @version   0.4.4

# *****************************************************************************
# ***                               Config                                   **
# *****************************************************************************

cRed='\e[1;31m'; cGreen='\e[0;32m'; cNone='\e[0m'; cYel='\e[1;33m';
cBlue='\e[1;34m'; cGray='\e[1;30m';
msgOk="${cGreen}Ok${cNone}"; msgErr="${cRed}Error${cNone}";
## Switch output language to English (DO NOT CHANGE THIS)
export LC_ALL=C;
# Path to scripts parent dir, ex.: '/home/nod32upd'
BASEPATH=$(dirname $(readlink -e $0));

## Update Script ##############################################################

##  ___
## / __| ___ _ ___ _____ _ _ ___
## \__ \/ -_) '_\ V / -_) '_(_-<
## |___/\___|_|  \_/\___|_| /__/
##
## Format:
##   updServer{N}=('http://mirror.url/path/' 'username' 'password');
##   {N} - is numeric value 0..N (N declared in update sacript, default '10')
##   'http://mirror.url/path/' - Server URL (with '/' at the end)
##   'username' - (not required) Login for auth
##   'password' - (not required) Password for auth
updServer0=('http://ntc.wattano.ac.th/nod4/');
updServer1=('http://biysk.pro/nod/');
updServer2=('http://updserver.myvnc.com/nod_upd/');
updServer3=('http://update.eset.com/eset_upd/' 'TRIAL-0131521471' 'uut4ujsrm3');
## Get valid key from 'getkey.sh' (it will replace 'updServer0' settings)
## !!!!!!!!!!!!! USE FOR EDUCATIONAL OR INFORMATION PURPOSES ONLY !!!!!!!!!!!!!
getFreeKey=true;
## !!!!!!!!!!!!! USE FOR EDUCATIONAL OR INFORMATION PURPOSES ONLY !!!!!!!!!!!!!

##  _   _          _      _
## | | | |_ __  __| |__ _| |_ ___ ___
## | |_| | '_ \/ _` / _` |  _/ -_|_-<
##  \___/| .__/\__,_\__,_|\__\___/__/
##       |_|
## Platforms:
updPlatforms=('x64' 'x86' 'winnt32' 'winnt64' 'WINNT');

## Types of update files
updTypes=('loader' 'loader64' 'perseus' 'engine' 'archives' 'advheur' 'cleaner'\
  'antistealth' 'antistealth64' 'epfw' 'epfw64' 'systemstatus' 'systemstatus64'\
  'smon'  'ra'  'selfdefense' 'selfdefense64' 'amon' 'amon64'  'hips'  'hips64'\
  'protoscan'  'parental'  'horus' 'db' 'pegasus' 'ess' 'eav'  'essbe'  'eavbe');

## Update levels (don't touch this if you don't know what is this shit)
updLevels=('0' '1' '2');

## You can find list of all langs on this page:
##   ESET NOD32 KB <http://kb.eset.com/esetkb/index?page=content&id=SOLN3308>
##   English = 1033; Russian = 1049; German = 1031; Ukrainian = 1058
updLanguages=('1033' '1049');

## Check not only server URL, also - this included sub-dirs (without slash at
##   the end)
checkSubdirsList=('v4' 'v5' 'v6' 'v7' 'v8');

## for not create main mirror (v3)
nomain=false;

## html pages whis user:key,
## markers for search : password, пароль
## http://trialeset.ru - фиг знает как его парсить
HTML_list=('http://tnoduse2.blogspot.ru' 'http://nod325.com/' 'http://www.fiaofiao.net' 'http://enod32.ru/eset-key-ess.php' 'http://cyberik.ru/solt/2157-keys-nod32-antivirus.html' 'http://hhuu.net');

## If 'TRUE' - we create ONLY 'update.ver' with full links to original update
##   files. Do NOT download updates files. If 'FALSE' - we write to new
##   'update.ver' local links (files names only), and DOWNLOAD updates files.
createLinksOnly=false;

## User-agent for 'wget'. Make some random values in it.
RD=$RANDOM;
USERAGENT="ESS Update (Windows; U; 32bit; VDB $((RD%15000+10000)); \
BPC $((RD%2+6)).0.$((RD%100+500)).0; OS: 5.1.2600 SP 3.0 NT; CH 1.1; \
LNG 1049; x32c; APP eavbe; BEO 1; ASP 0.10; FW 0.0; PX 0; PUA 0; RA 0)";

##  ___      _      _
## | _ \__ _| |_ __| |_  ___ ___
## |  _/ _` |  _/ _| ' \/ -_|_-<
## |_| \__,_|\__\__|_||_\___/__/
##
## Path where we store mirror files. With '/' at the end
pathToSaveBase="$HOME/nod32mirror/";

## Path to temp work directory (will created automatically and removed
##   after update finish)
pathToTempDir=$pathToSaveBase'.tmp/';

## Log file (set '' for disable)
LOGFILE=$BASEPATH'/nod32mirror.log';

## Path to 'getkey.sh'
pathToGetFreeKey=$BASEPATH'/getkey.sh';

## Path to directory with script files
pathToKeysDir=$BASEPATH"/.nod32keys/";

## File for store work keys
validKeysFile=$pathToKeysDir"validkeys.txt";

## File for store invalid keys (set "" for disable)
invalidKeysFile=$pathToKeysDir"invalidkeys.txt";

##  ___ _
## | __| |_ __
## | _||  _/ _|
## |___|\__\__|
##
## 'wget' limits (set '' for disable)
wgetDelay='3';
wgetLimitSpeed='1024k';

## Create 'robots.txt' file after update complete
createRobotsFile=true;

## Create 'lastevent.txt' with update timestamp after update complete
createTimestampFile=true;

## --random WORKURL
## random WORKURL from update.ver [HOSTS] for $getFreeKey" = true
randomServer=true;

## --checkver
## check if need update mirror for actual
checkVerFile=true;

# *****************************************************************************
# ***                            END Config                                  **
# *****************************************************************************

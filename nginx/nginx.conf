user %NGINX_USER|nginx%;

pid %NGINX_PID_FILE|/var/run/nginx.pid%;
daemon off;

worker_processes %NGINX_WORKER_PROCESSES|auto%;
worker_rlimit_nofile %NGINX_RLIMIT_NOFILE|2048%;

events {
  worker_connections %NGINX_WORKER_CONNECTIONS|1024%;
  multi_accept %NGINX_MULTI_ACCEPT|on%;
}

error_log %NGINX_ERROR_LOG_PATH|/dev/stderr% %NGINX_ERROR_LOG_LEVEL|warn%;

%NGINX_EXTRA|# No extra nginx config%

http {
  include /etc/nginx/mime.types;

  # Core
  index index.html index.htm index.md index.txt;
  server_tokens %NGINX_SERVER_TOKENS|off%;
  chunked_transfer_encoding on;
  client_body_buffer_size 32k;
  client_max_body_size %NGINX_CLIENT_MAX_BODY_SIZE|64m%;
  client_body_in_file_only off;
  large_client_header_buffers 1 8k;
  default_type application/octet-stream;
  disable_symlinks off;
  ignore_invalid_headers on;
  underscores_in_headers on;
  sendfile on;
  access_log off;
  tcp_nodelay on;
  tcp_nopush on;
  send_timeout %NGINX_SEND_TIMEOUT|20s%;
  reset_timedout_connection on;
  client_body_timeout %NGINX_CLIENT_BODY_TIMEOUT|20s%;
  open_file_cache max=4096 inactive=20s;
  open_file_cache_valid 40s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  %NGINX_HTTP_EXTRA|# No extra nginx HTTP config%

  server {
    listen      %NGINX_SERVER_LISTEN_PORT|80%;
    server_name _;
    root        %NGINX_SERVER_ROOT_DIRECTORY|/data%;
    access_log  %NGINX_SERVER_ACCESS_LOG_PATH|/dev/stdout%;

    # Define custom error pages
    error_page 402 405 406 407 408 409 410 411 412 413 414 415 416 417 422 423 424 425 426 428 429 431 434 449 451 /_errorpages/4xx.html;
    error_page 400 /_errorpages/400.html;
    error_page 401 /_errorpages/401.html;
    error_page 403 /_errorpages/403.html;
    error_page 404 /_errorpages/404.html;
    error_page 501 504 505 506 507 508 509 510 511 /_errorpages/5xx.html;
    error_page 500 /_errorpages/500.html;
    error_page 502 /_errorpages/502.html;
    error_page 503 /_errorpages/503.html;

    # Define location for custom error pages
    location ^~ /_errorpages/ {
      internal;
      root /usr/share/nginx/html;
    }

    # Deny access for spiders/robots/tools/etc
    if ($http_user_agent ~* ^(wget|aria2|nod32view|perl|php|curl|google|yandex|yahoo|-|mirror|spider|bot|parser|grab)) {
      return 403;
    }

    # Deny direct access for hidden files/directories
    location ~ /\. {
      return 403;
    }

    # Serve static content
    location ~ ^/(robots\.txt|index\..+|favicon\.ico|)$ {
      root /usr/share/nginx/html;
    }

    # Redirect request to correct update.ver file, based on nod32 user-agent version
    location ~* "^(?<file_url>/update\.ver)$" {
      if ($http_user_agent ~* "BPC (?<version>[\d]{1,2})\.") {
        set $new_location "v$version$file_url";
      }
      if (-f $document_root/$new_location) {
        return 301 /$new_location;
      }
    }

    %NGINX_AUTH_SETTINGS|# No server auth settings%

    %NGINX_SERVER_EXTRA|# No extra SERVER config%

    try_files $uri =404;
  }
}
